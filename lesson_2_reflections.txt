Add lesson 2 reflections

What happens when you initialize a repository? Why do you need to do it?

	When you initialize it creates untracked files. You need to do it so that you can
	create commits and modify versions.

How is the staging area different than the working directory and repository? What value do
you think it offers?

	The staging area gives you the chance to review and reflect on your work before moving
	it to the working directory and repository. It allows you to pause before making a commit.

How can you use the staging area to make sure you have one commit per logical change?

	By reviewing your files and changes in the staging area and deciding what you'd like to commit.

What are some situations when branches would be helpful in keeping your history organized? How would
branches help?

	When you're making slight changes, branches are helpful by keeping the master intact, but allowing
	for experimental changes that you may want to build on.

How do the diagrams help you visualize the branch structure?

	They allow me to see where the branches meet and overlap, as well as where they lack
	reachability.

What is the result of merging two branches together? Why do we represent it in the diagram the way
we do?

	The changes can still be seen for both, but we can identify what might be missing from the experimental branch, or what new feature might need adding to, as we merge the branches and run the master.

What are the pros and cons of Git's automatic merging vs. always doing merges manually?

	Automatic merging is great when the merge is absolute, or clear, manually is better when there is some
	lack of clarity that would take Git forever to figure out, when you can figure it out more quickly.
